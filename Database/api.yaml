openapi: 3.0.0
info:
  title: Database
  description: 
  version: 1.0

servers:
  - url: http://localhost:3005/
    description: local server

paths:
  /User:
  
  /User/Add: #userName and userDisplay not showing in DB
    post:
      tags:
      - User
      summary: Add a user to the database
      consumes:
        - application/json
      produces:
        - application/json
      description: "Add the required properties to add a new user."
      parameters:
      - in: body
        name: body
        description: Pet object that needs to be added to the store
        required: true
        schema:
          application/json:
          $ref: '#/components/schemas/userParams'
      responses:
        200:
          description: Successful Response
        400:
          description: User Error
        500:
          description: Internal Server Error
  /User/Delete/{user_id}:
    delete:
      tags:
      - User
      summary: Deletes a user from the database
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userParams'
      responses:
        200:
          description: Successful Response
        400:
          description: User Error
        500:
          description: Internal Server Error

components:
  schemas:
    userParams:
      type: object
      required:
        - user_name
        - user_display
        - password
        - email
        - image_url
        - google_account
        - facebook_account
        - friends
        - friend_groups
        - posts
        - block_list
      properties:
        user_name:
          type: string
        user_display:
          type: string
        password:
          type: string 
          format: password
        email:
          type: string
        google_account:
          type: string
        facebook_account:
          type: string
        friends:
          type: array
          items:
            $ref: '#/components/schemas/userParams'
        friend_groups:
          type: array
          items:
            $ref: '#/components/schemas/friendGroupParams'
        posts:
          type: array
          items:
            $ref: '#/components/schemas/postParams'
        block_list:
          type: array
          items:
            $ref: '#components/schemas/userParams'
    friendGroupParams:
      type: object
      required:
        - users_id
        - name
      properties:
        users_id:
          type: array
          items:
            $ref: '#/components/schemas/userParams'
        name:
          type: string
    postParams:
      type: object
      required:
        - image_url
        - location
        - time_posted
        - user
        - tags
        - user_tags
        - text
        - likes
        - comments
      properties:
        image_url:
          type: string
        location:
          type: object
        time_posted:
          type: string
          format: date-time
        user:
          type: object
          $ref: '#/components/schemas/userParams'
        tags:
          type: array
          items: 
            type: string
        user_tags:
          type: array
          items:
            type: string
        text:
          type: string
        likes:
          type: array
          items: 
            $ref: '#/components/schemas/userParams'
        comments:
          type: array
          items: 
            $ref: '#/components/schemas/commentParams'
    commentParams:
      type: object
      required:
        - text
        - user_id
        - time_sent
        - post_id
      properties:
        text:
          type: string
        user_id:
          type: object
          $ref: '#/components/schemas/userParams'
        time_sent:
          type: string
          format: date-time
        post_id:
          type: string
          $ref: '#/components/schemas/postParams'
          